name: 🧪 check && deploy 🚀

on:
  push:
    branches: [main]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  check:
    name: 🧪 check 🧪
    runs-on: ubuntu-latest
    env:
      APP_NAME: ${{secrets.PFN-job-application-tracker}}
      NEXT_PUBLIC_ENV: ${{secrets.NEXT_PUBLIC_ENV}}
      NEXT_PUBLIC_BACK_URL: ${{secrets.NEXT_PUBLIC_BACK_URL}}
      NEXT_PUBLIC_BACK_URL_DEV: ${{secrets.NEXT_PUBLIC_BACK_URL_DEV}}
      NEXT_PUBLIC_FRONT_URL: ${{secrets.NEXT_PUBLIC_FRONT_URL}}
      NEXT_PUBLIC_FRONT_URL_DEV: ${{secrets.NEXT_PUBLIC_FRONT_URL_DEV}}
      PY_ENV: ${{secrets.PY_ENV}}
      PORT: ${{secrets.PORT}}
      FRONT_URL: ${{secrets.FRONT_URL}}
      FRONT_URL_DEV: ${{secrets.FRONT_URL_DEV}}
      SECRET: ${{secrets.SECRET}}
      AWS_ACCESS_KEY: ${{secrets.AWS_ACCESS_KEY}}
      AWS_ACCESS_SECRET_KEY: ${{secrets.AWS_ACCESS_SECRET_KEY}}
      AWS_REGION: ${{secrets.AWS_REGION}}
      AWS_BUCKET_NAME: ${{secrets.AWS_BUCKET_NAME}}
      DB_PWD: ${{secrets.DB_PWD}}
      DB_URL: ${{secrets.DB_URL}}
      MY_EMAIL: ${{secrets.MY_EMAIL}}
      EMAIL_PWD: ${{secrets.EMAIL_PWD}}
      NEXT_PUBLIC_BACK_URL_TEST: ${{secrets.NEXT_PUBLIC_BACK_URL_TEST}}
      NEXT_PUBLIC_FRONT_URL_TEST: ${{secrets.NEXT_PUBLIC_FRONT_URL_TEST}}
      BREVO_SMPT_SERVER: ${{secrets.BREVO_SMPT_SERVER}}
      BREVO_SMPT_PORT: ${{secrets.BREVO_SMPT_PORT}}
      BREVO_SMPT_USER: ${{secrets.BREVO_SMPT_USER}}
      BREVO_SMPT_PWD: ${{secrets.BREVO_SMPT_PWD}}
      SMPT_FROM: ${{secrets.SMPT_FROM}}

    steps:
      - name: 📂 clone code
        uses: actions/checkout@v4

      - name: 🟩 setup node && yarn
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: 🔧 enable corepack && set yarn version berry
        run: |
          corepack enable
          corepack prepare yarn@4.9.2 --activate

      - name: 🗃️ yarn cache
        uses: actions/cache@v4
        with:
          path: |
            **/node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}

      - name: 📦 install client pkg
        run: yarn install && yarn workspace client playwright install

      - name: 🐍 setup python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: 📦 install pm server
        run: curl -sSL https://install.python-poetry.org | python3

      - name: 🛠️ add path pm
        run: echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: 🗃️ poetry cache
        uses: actions/cache@v4
        with:
          path: ~/.cache/pypoetry
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}

      - name: 📦 install server pkg
        run: poetry install --no-interaction --no-root
        working-directory: apps/server

      - name: 🧪 lint && types check
        run: yarn check

      - name: 💻 build client
        run: yarn workspace client build

      - name: ▶️ start servers & wait
        run: |
          set -euo pipefail
          yarn workspace server dev &                      
          yarn dlx wait-on http-get://127.0.0.1:3000/api/v1/test/
          yarn workspace client start &                
          yarn dlx wait-on http-get://127.0.0.1:3001

      - name: 🧪 run tests
        run: yarn test

  deploy:
    name: 🚀 deploy server && client 🚀
    needs: [check]
    if: github.event_name == 'push' && needs.check.result == 'success'
    runs-on: ubuntu-latest

    steps:
      - name: 📂 clone code
        uses: actions/checkout@v4

      - name: 🛠️ install fly CLI lib
        uses: superfly/flyctl-actions/setup-flyctl@master

      - name: 🚀 deploy server
        working-directory: apps/server
        run: flyctl deploy --remote-only --config fly.toml
        env:
          FLY_API_TOKEN: ${{ secrets.PFN_JOB_APPLICATION_TRACKER__SERVER }}

      - name: 🚀 deploy client
        working-directory: apps/client
        run: |
          flyctl deploy \
            --remote-only \
            --config fly.toml \
            --build-arg NEXT_PUBLIC_ENV=${{ secrets.NEXT_PUBLIC_ENV }} \
            --build-arg NEXT_PUBLIC_FRONT_URL=${{ secrets.NEXT_PUBLIC_FRONT_URL }} \
            --build-arg NEXT_PUBLIC_BACK_URL=${{ secrets.NEXT_PUBLIC_BACK_URL }}
        env:
          FLY_API_TOKEN: ${{ secrets.PFN_JOB_APPLICATION_TRACKER__CLIENT }}
