"""change length names

Revision ID: 8e55b2603026
Revises: 3eda49e72b0a
Create Date: 2025-08-25 20:29:55.682403

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '8e55b2603026'
down_revision: Union[str, Sequence[str], None] = '3eda49e72b0a'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(op.f('fk_backup_codes_user'), 'backup_codes', type_='foreignkey')
    op.create_foreign_key('fk_backup_codes_user', 'backup_codes', 'users', ['user_id'], ['id'], source_schema='public', referent_schema='public', ondelete='CASCADE')
    op.drop_constraint(op.f('fk_tokens_user'), 'tokens', type_='foreignkey')
    op.create_foreign_key('fk_tokens_user', 'tokens', 'users', ['user_id'], ['id'], source_schema='public', referent_schema='public', ondelete='CASCADE')
    op.alter_column('users', 'first_name',
               existing_type=sa.VARCHAR(length=50),
               type_=sa.String(length=100),
               existing_nullable=False)
    op.alter_column('users', 'last_name',
               existing_type=sa.VARCHAR(length=50),
               type_=sa.String(length=100),
               existing_nullable=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('users', 'last_name',
               existing_type=sa.String(length=100),
               type_=sa.VARCHAR(length=50),
               existing_nullable=False)
    op.alter_column('users', 'first_name',
               existing_type=sa.String(length=100),
               type_=sa.VARCHAR(length=50),
               existing_nullable=False)
    op.drop_constraint('fk_tokens_user', 'tokens', schema='public', type_='foreignkey')
    op.create_foreign_key(op.f('fk_tokens_user'), 'tokens', 'users', ['user_id'], ['id'], ondelete='CASCADE')
    op.drop_constraint('fk_backup_codes_user', 'backup_codes', schema='public', type_='foreignkey')
    op.create_foreign_key(op.f('fk_backup_codes_user'), 'backup_codes', 'users', ['user_id'], ['id'], ondelete='CASCADE')
    # ### end Alembic commands ###
