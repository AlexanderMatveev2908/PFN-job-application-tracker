"""=> 0 mig

Revision ID: a407370da7e0
Revises: 
Create Date: 2025-08-16 14:24:15.322485

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'a407370da7e0'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('first_name', sa.String(length=50), nullable=False),
    sa.Column('last_name', sa.String(length=50), nullable=False),
    sa.Column('email', sa.String(length=254), nullable=False),
    sa.Column('password', sa.String(length=200), nullable=False),
    sa.Column('terms', sa.Boolean(), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.BigInteger(), server_default=sa.text('(extract(epoch from now()) * 1000)::bigint'), nullable=False),
    sa.Column('updated_at', sa.BigInteger(), server_default=sa.text('(extract(epoch from now()) * 1000)::bigint'), nullable=False),
    sa.Column('deleted_at', sa.BigInteger(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    schema='public'
    )
    op.create_index(op.f('ix_public_users_email'), 'users', ['email'], unique=True, schema='public')
    op.create_table('tokens',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('token_t', sa.Enum('REFRESH', 'CONF_EMAIL', 'RECOVER_PWD', 'CHANGE_EMAIL', 'CHANGE_PWD', 'MANAGE_ACC', name='token_type'), nullable=False),
    sa.Column('alg', sa.Enum('AES_CBC_HMAC_SHA256', 'RSA_OAEP_256_A256GCM', 'HMAC_SHA256', name='alg_type'), nullable=False),
    sa.Column('hashed', sa.LargeBinary(length=32), nullable=True),
    sa.Column('exp', sa.BigInteger(), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.BigInteger(), server_default=sa.text('(extract(epoch from now()) * 1000)::bigint'), nullable=False),
    sa.Column('updated_at', sa.BigInteger(), server_default=sa.text('(extract(epoch from now()) * 1000)::bigint'), nullable=False),
    sa.Column('deleted_at', sa.BigInteger(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['public.users.id'], name='fk_tokens_user', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    schema='public'
    )
    op.create_index(op.f('ix_public_tokens_user_id'), 'tokens', ['user_id'], unique=False, schema='public')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_public_tokens_user_id'), table_name='tokens', schema='public')
    op.drop_table('tokens', schema='public')
    op.drop_index(op.f('ix_public_users_email'), table_name='users', schema='public')
    op.drop_table('users', schema='public')
    # ### end Alembic commands ###
